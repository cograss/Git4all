' Gambas class file

'' ## Functions for code optimization
''  # Please read function info in each function

Static Public Sub webFormMessages(myLabel1 As String, myTitle As String) ''Sets webForm Title and Label(s)
'' ###FUNCTION INFO
'' This function needs two arguments: 
'' *'myTitle' is the webForm.Title setting 
'' *'myLabel1' is the Label1.Text setting.
'' 
'' Add any new labels as arguments  
'' e.g.: webFormMessages(myLabel[...] As String, myLabel2 As String, myLabel1, myTitle As String)
'' 
  webForm.Label1.Text = myLabel1
  webForm.Title = myTitle
  
End

Static Public Sub chkFileExist(filePath As String, createFile As Boolean) As Boolean ''Cheks if file exists and returns True or False. 
'' ###FUNCTION INFO
'' This function needs two arguments: 
'' *'filePath' is the file, 
'' *'createFile' calls fileCreator(String, Boolean) when True
'' 
  If Not Exist(filePath) Then 
    If createFile Then ' if createFile argument is set to True
      fileCreator(filePath, True) 'create file, ask confirmation = True
    Endif
    Return False
  Endif
  Return True 
End

Static Public Sub fileCreator(filePath As String, msgConfirm As Boolean) ''Creates 'filePath' file. Ask confirm when msgConfirm = True
'' ###FUNCTION INFO
'' This function needs two arguments: 
'' *'filePath' is the file, 
'' *'msgConfirm' asks permission and show result when True, when False creates file silently.
'' 
  Dim myStream As Stream

filePath = Replace(filePath, " ", "_") 'replace space with underscore. (to avoid shell errors easy)
  If msgConfirm Then 'if msgCorfirm argument is true
     If Message.Question(("The file ") & filePath & (" dont exist.\n Create File?"), (" OK "), (" Cancel ")) = 2 Then Return
  Endif ' if user presses "Cancel" exits fileCreator() *parenthesis at string adds string to translation

  myStream = Open filePath For Create 'Create file
  Close #myStream 
  
  If msgConfirm Then Message.Info(("File ") & filePath & (" created.")) 

End

Static Public Sub comboLoader(loadToCombo As ComboBox, fromFile As String) '' Loads content from file to Combobox.
'' ###FUNCTION INFO
'' This function needs two arguments: 
'' *'loadToCombo' name of the ComboBox, 
'' *'fromFile' the filepath of the file to be read from.
'' 
Dim hFile As File
Dim sLine As String 'the ComboBox text
Dim sNum As Integer 'the Combobox Index

sNum = loadToCombo.Count
fromFile = Replace(fromFile, " ", "_") 'replace space with underscore. (to avoid shell errors easy)
hFile = Open fromFile For Input
  While Not Eof(hFile)
    Line Input #hFile, sLine 
    sNum += 1
    loadToCombo.Add(sLine, sNum) 
  Wend
Close #hFile

End

Static Public Sub textBoxLoader(loadToTextBox As TextBox, fromFile As String, lineNum As Integer) '' Loads content from file to TextBox
'' ###FUNCTION INFO
'' This function needs three (3) arguments: 
'' *'loadToTextBox' name of the TextBox, 
'' *'fromFile' the filepath of the file to be read from.
'' *'lineNum' the line number to add to TextBox.
'' 
Dim hFile As Stream
Dim sLine As String

hFile = Open fromFile For Input 'opens file
  While Not Eof(hFile)
    While lineNum > 0 'go to line number
      Line Input #hFile, sLine 
      lineNum -= 1 'lineNum = lineNum - 1
      If sLine Not Null Then loadToTextBox.Text = sLine
    Wend
    Line Input #hFile, sLine
  Wend
Close #hFile

End

Static Public Sub textBoxSaver(saveFromTextBox As TextBox, filePath As String) '' saves Textbox.Text to a file
'' ###FUNCTION INFO
'' This function needs two (2) arguments: 
'' *'saveToTextBox' name of the TextBox, 
'' *'fromFile' the filepath of the file to be read from.
'' 
Dim hFile As File
Dim sLine As String

filePath = Replace(filePath, " ", "_") 'replace space with underscore. (to avoid shell errors easy)
sLine = saveFromTextBox.Text 
  If sLine Not Null Then 
    hFile = Open filepath For Append 'opens file setting pointer at Eof (for additional data)
    Print #hFile, sLine & Chr(13) 'add data
    Close #hFile
  Endif
End
 
