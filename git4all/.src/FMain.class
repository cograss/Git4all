' Gambas class file

Public Sub _new()

End

Public Sub Form_Open()

  Me.Height = 600
  Me.width = 800
  Me.Center
  txtGitOutput.Text = "Ready_" & Chr(13) 'Shows "Ready" in the output text area.
End

Public Sub Form_Close()

  webForm.Close
  
End


Public Sub mnuProjectExit_Click()

  Me.Close

End

Public Sub mnuSettingsGitHubNewAccount_Click() '' Calls webForm and shows GitHUB registration page (currently main).

  webForm.WebView1.Url = main.glbGithubUrl
  myFunctions.webFormMessages(("Download progress:"), ("GitHUB registration page"))
  webForm.Show

End


Public Sub mnuSettingsGithubAccount_Click()
  
  frmGitHubAccount.Show()

End

Public Sub mnuProjectNew_Click()
Dim strOutput As String ' used to store output from shell execution.
Dialog.Title = ("Select a new project directory.")
 If Dialog.SelectDirectory() Then Return
 main.glbProjectDir = Dialog.Path 'sets project direcrory to chosen path.
 If Exist(main.glbProjectDir &/ ".git") Then 'if the dir is already a git project, ask confirmation.
  If Message.Error(("The folder you specified is already a GIT project.") & "\n" & ("Do you wish to reinitialise it?"), ("OK"), ("Cancel")) = 2 Then Return
 Endif

strOutput = gitCommands.initGitDir(main.glbProjectDir) 'execute initialisation git command and assingn output to string.
txtGitOutput.Text = txtGitOutput.Text & Chr(13) & strOutput 'show output of command to output textarea.

End

Public Sub mnuProjectOpen_Click()
Dialog.Title = ("Select a GIT project directory.")
If Dialog.SelectDirectory() Then Return
If Not Exist(Dialog.Path &/ ".git") Then
 If Message.Error(("The folder you specified is NOT a GIT project.") & "\n" & ("Do you wish to initialise a new project?"), ("OK"), ("Cancel")) = 1 Then
  mnuProjectNew_Click
  Wait 'Wait For previous call To end.
  Return
  End If
 Message(("Operation Canceled. Active project is ") & main.glbProjectDir)
 Return
End If
main.glbProjectDir = Dialog.Path 'sets project direcrory to chosen path.
Message(("Active project is now set to:\n") & main.glbProjectDir)
updateStageBtn_Click() ' updates staging area
End


Public Sub updateStageBtn_Click()
Dim strOutput As String ' used to store output from shell execution.
  
strOutput = gitCommands.GitStatus(main.glbProjectDir)
stagingArea.Text = strOutput
End
Public Sub Form_Resize()
  ''Set the textview new size.
  txtGitOutput.w = FMain.w - 25
  txtGitOutput.Y = FMain.H - 115

End

Public Sub commit_allBtn_Click()
Dim strOutput, myMessage As String 
myMessage = InputBox(("Changes description"), ("Commit Message"))
If Len(myMessage) > 50 Or Len(myMessage) < 5 Then
  Message.Error(("Description must be at least 5 charactres") & "\n" & ("and up to 50 characters")) 
  Return
Endif
strOutput = gitCommands.GitCommitAll(main.glbProjectDir, myMessage)
txtGitOutput.Text = strOutput
updateStageBtn_Click() ' updates staging area
End

Public Sub pushBtn_Click() ''TODO: Create a file for login data.

  main.glbUsername = InputBox("Enter Username", "Login info")
  main.glbPassword = InputBox("Enter Password", "Login info")
  main.glbRepozitory = InputBox("Enter Repozitory", "Login info")
  main.glbBranch = InputBox("Enter Branch", "Login info")
  Wait
  txtGitOutput.Text = gitCommands.GitHubPush(main.glbRepozitory, main.glbBranch)
End
